diff --git a/vite.config.ts b/vite.config.ts
index bf29393..5acd46f 100755
--- a/vite.config.ts
+++ b/vite.config.ts
@@ -66,4 +66,18 @@ export default defineConfig({
   optimizeDeps: {
     entries: ['./src/**/*.vue'],
   },
+  server: {
+    proxy: {
+      '^/api/.*': {
+        target: 'http://$RPCNODES_SERVICE_HOST:$RPCNODES_SERVICE_PORT_API',
+        changeOrigin: true,
+        rewrite: (path) => path.replace(/^\/api*/g, "")
+      },
+      '^/rpc/.*': {
+        target: 'http://$RPCNODES_SERVICE_HOST:$RPCNODES_SERVICE_PORT_RPC',
+        changeOrigin: true,
+        rewrite: (path) => path.replace(/^\/rpc*/g, "")
+      },
+    },
+  },
 });
diff --git a/src/stores/useDashboard.ts b/src/stores/useDashboard.ts
index 8354c17b..48074718 100644
--- a/src/stores/useDashboard.ts
+++ b/src/stores/useDashboard.ts
@@ -65,7 +65,9 @@ export interface ChainConfig {
   features?: string[]
   endpoints: {
     rest?: Endpoint[];
+    restDirect?: Endpoint[];
     rpc?: Endpoint[];
+    rpcDirect?: Endpoint[];
     grpc?: Endpoint[];
   };
   logo: string;
@@ -99,6 +101,7 @@ export interface LocalConfig {
   consensus_prefix?: string;
   alias: string;
   api: string[] | Endpoint[];
+  apiDirect?: string[] | Endpoint[];
   grpc: Endpoint[];
   provider_chain: {
     api: string[] | Endpoint[]
@@ -116,6 +119,7 @@ export interface LocalConfig {
   theme_color?: string;
   min_tx_fee: string;
   rpc: string[] | Endpoint[];
+  rpcDirect?: string[] | Endpoint[];
   sdk_version: string;
   registry_name?: string;
   features?: string[];
@@ -176,7 +180,9 @@ export function fromLocal(lc: LocalConfig): ChainConfig {
   conf.prettyName = lc.registry_name || lc.chain_name;
   conf.endpoints = {
     rest: apiConverter(lc.api),
+    restDirect: apiConverter(lc.apiDirect || lc.api),
     rpc: apiConverter(lc.rpc),
+    rpcDirect: apiConverter(lc.rpcDirect || lc.rpc),
     grpc: apiConverter(lc.grpc),
   };
   if(lc.provider_chain) {
diff --git a/src/modules/wallet/keplr.vue b/src/modules/wallet/keplr.vue
index c8ce25b8..b7099fdc 100644
--- a/src/modules/wallet/keplr.vue
+++ b/src/modules/wallet/keplr.vue
@@ -18,8 +18,9 @@ onMounted(() => {
 })
 async function initParamsForKeplr() {
     const chain = selected.value
-    if(!chain.endpoints?.rest?.at(0)) throw new Error("Endpoint does not set");
-    const client = CosmosRestClient.newDefault(chain.endpoints.rest?.at(0)?.address || "")
+    const restEndpoint = chain.endpoints?.restDirect?.at(0)?.address || chain.endpoints?.rest?.at(0)?.address;
+    if(!restEndpoint) throw new Error("Endpoint does not set");
+    const client = CosmosRestClient.newDefault(restEndpoint)
     const b = await client.getBaseBlockLatest()   
     const chainid = b.block.header.chain_id
 
@@ -32,8 +33,8 @@ async function initParamsForKeplr() {
     conf.value = JSON.stringify({
         chainId: chainid,
         chainName: chain.chainName,
-        rpc: chain.endpoints?.rpc?.at(0)?.address,
-        rest: chain.endpoints?.rest?.at(0)?.address,
+        rpc: chain.endpoints?.rpcDirect?.at(0)?.address || chain.endpoints?.rpc?.at(0)?.address,
+        rest: restEndpoint,
         bip44: {
             coinType: Number(chain.coinType),
         },
diff --git a/src/modules/wallet/suggest.vue b/src/modules/wallet/suggest.vue
index 5ecc76f2..415e8876 100644
--- a/src/modules/wallet/suggest.vue
+++ b/src/modules/wallet/suggest.vue
@@ -37,8 +37,9 @@ function onchange() {
 
 async function initParamsForKeplr() {
     const chain = selected.value
-    if(!chain.endpoints?.rest?.at(0)) throw new Error("Endpoint does not set");
-    const client = CosmosRestClient.newDefault(chain.endpoints.rest?.at(0)?.address || "")
+    const restEndpoint = chain.endpoints?.restDirect?.at(0)?.address || chain.endpoints?.rest?.at(0)?.address;
+    if(!restEndpoint) throw new Error("Endpoint does not set");
+    const client = CosmosRestClient.newDefault(restEndpoint)
     const b = await client.getBaseBlockLatest()   
     const chainid = b.block.header.chain_id
 
@@ -51,8 +52,8 @@ async function initParamsForKeplr() {
     conf.value = JSON.stringify({
         chainId: chainid,
         chainName: chain.chainName,
-        rpc: chain.endpoints?.rpc?.at(0)?.address,
-        rest: chain.endpoints?.rest?.at(0)?.address,
+        rpc: chain.endpoints?.rpcDirect?.at(0)?.address || chain.endpoints?.rpc?.at(0)?.address,
+        rest: restEndpoint,
         bip44: {
             coinType: Number(chain.coinType),
         },
@@ -96,9 +97,10 @@ async function initParamsForKeplr() {
 async function initSnap() {
     const chain = selected.value
     const [token] = chain.assets
+    const restEndpoint = chain.endpoints?.restDirect?.at(0)?.address || chain.endpoints?.rest?.at(0)?.address;
 
-    if(!chain.endpoints?.rest?.at(0)) throw new Error("Endpoint does not set");
-    const client = CosmosRestClient.newDefault(chain.endpoints.rest?.at(0)?.address || "")
+    if(!restEndpoint) throw new Error("Endpoint does not set");
+    const client = CosmosRestClient.newDefault(restEndpoint)
     const b = await client.getBaseBlockLatest()   
     const chainId = b.block.header.chain_id
 
diff --git a/src/modules/wallet/unisat.vue b/src/modules/wallet/unisat.vue
index 2a04d56a..32d9b98e 100644
--- a/src/modules/wallet/unisat.vue
+++ b/src/modules/wallet/unisat.vue
@@ -16,8 +16,9 @@ onMounted(() => {
 })
 async function initParamsForKeplr() {
     const chain = selected.value
-    if(!chain.endpoints?.rest?.at(0)) throw new Error("Endpoint does not set");
-    const client = CosmosRestClient.newDefault(chain.endpoints.rest?.at(0)?.address || "")
+    const restEndpoint = chain.endpoints?.restDirect?.at(0)?.address || chain.endpoints?.rest?.at(0)?.address;
+    if(!restEndpoint) throw new Error("Endpoint does not set");
+    const client = CosmosRestClient.newDefault(restEndpoint)
     const b = await client.getBaseBlockLatest()   
     const chainid = b.block.header.chain_id
 
@@ -30,8 +31,8 @@ async function initParamsForKeplr() {
     conf.value = JSON.stringify({
         chainId: chainid,
         chainName: chain.chainName,
-        rpc: chain.endpoints?.rpc?.at(0)?.address,
-        rest: chain.endpoints?.rest?.at(0)?.address,
+        rpc: chain.endpoints?.rpcDirect?.at(0)?.address || chain.endpoints?.rpc?.at(0)?.address,
+        rest: restEndpoint,
         bip44: {
             coinType: Number(chain.coinType),
         },
